{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"FHIR Web App\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Patients\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.fetchPatients && $options.fetchPatients(...args))\n  }, \"Fetch Patients\"), $data.patients.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"p\", null, _toDisplayString($data.patients), 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.patients, patient => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: patient.id\n    }, _toDisplayString(patient.resource.name[0].given[0]), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","key","_createElementBlock","_hoisted_1","onClick","_cache","args","$options","fetchPatients","$data","patients","length","_hoisted_2","_hoisted_3","_toDisplayString","_Fragment","_renderList","patient","id","resource","name","given","_createCommentVNode"],"sources":["C:\\xampp\\htdocs\\fhir_web_app\\fhir_web_app_frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>FHIR Web App</h1>\n    <button @click=\"fetchPatients\">Fetch Patients</button>\n    <div v-if=\"patients.length\">\n      <h2>Patients</h2>\n      <p>{{patients}}</p>\n      <ul>\n        <li v-for=\"patient in patients\" :key=\"patient.id\">{{ patient.resource.name[0].given[0] }}</li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      patients: [],\n    };\n  },\n  methods: {\n    async fetchPatients() {\n      try {\n     await axios.get('http://localhost:3000/api/patients')\n        .then(success =>{\n          console.log(\"Successful request to FHIR server\");\n          console.log(success);\n           this.patients = success.data.entry;\n        })\n        .catch(error =>{\n          console.log(error);\n          alert(`Error! ${error}`);\n\n        });\n\n\n      } catch (error) {\n        console.error('Error fetching patients:', error.message);\n      }\n    },\n  },\n};\n</script>\n\n<style>\n/* Add your styles here */\n</style>\n"],"mappings":";gCAEIA,mBAAA,CAAqB,YAAjB,cAAY;;EAFpBC,GAAA;AAAA;gCAKMD,mBAAA,CAAiB,YAAb,UAAQ;;uBAJhBE,mBAAA,CAUM,cATJC,UAAqB,EACrBH,mBAAA,CAAsD;IAA7CI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;KAAE,gBAAc,GAClCG,KAAA,CAAAC,QAAQ,CAACC,MAAM,I,cAA1BT,mBAAA,CAMM,OAVVU,UAAA,GAKMC,UAAiB,EACjBb,mBAAA,CAAmB,WAAAc,gBAAA,CAAdL,KAAA,CAAAC,QAAQ,kBACbV,mBAAA,CAEK,c,kBADHE,mBAAA,CAA8Fa,SAAA,QARtGC,WAAA,CAQ8BP,KAAA,CAAAC,QAAQ,EAAnBO,OAAO;yBAAlBf,mBAAA,CAA8F;MAA7DD,GAAG,EAAEgB,OAAO,CAACC;wBAAOD,OAAO,CAACE,QAAQ,CAACC,IAAI,IAAIC,KAAK;wCAR3FC,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}