{"ast":null,"code":"import axios from \"axios\";\nimport * as d3 from \"d3\";\nexport default {\n  mounted() {\n    this.fetchPatients();\n  },\n  data() {\n    return {\n      patients: [],\n      searchId: \"\"\n    };\n  },\n  methods: {\n    async fetchPatients() {\n      try {\n        await axios.get(\"http://localhost:3000/api/patients\").then(success => {\n          console.log(\"Successful request to FHIR server\");\n          console.log(success);\n          this.patients = success.data.entry;\n          this.renderD3Charts();\n        }).catch(error => {\n          console.log(error);\n          alert(`Error! ${error}`);\n        });\n      } catch (error) {\n        console.error(\"Error fetching patients:\", error.message);\n      }\n    },\n    renderD3Charts() {\n      this.renderLineChart();\n      this.renderPieChart();\n      this.renderBarChart();\n    },\n    renderLineChart() {\n      // Filter out patients with empty birth dates\n      var filteredPatients = this.patients.filter(patient => patient.resource.birthDate && patient.resource.birthDate.length >= 4);\n\n      // Extract birth years and count occurrences\n      var birthYearCounts = filteredPatients.reduce((counts, patient) => {\n        const birthYear = patient.resource.birthDate.substring(0, 4);\n\n        // Increment the count for the birth year\n        counts[birthYear] = (counts[birthYear] || 0) + 1;\n        return counts;\n      }, {});\n      var data = Object.entries(birthYearCounts).map(([birthYear, count]) => ({\n        birthYear: parseInt(birthYear),\n        // Convert birthYear to a number\n        count: count\n      }));\n      var svgWidth = 600,\n        svgHeight = 400;\n      var margin = {\n        top: 20,\n        right: 20,\n        bottom: 30,\n        left: 50\n      };\n      var width = svgWidth - margin.left - margin.right;\n      var height = svgHeight - margin.top - margin.bottom;\n      var svg = d3.select(this.$refs.d3LineChartContainer).append(\"svg\").attr(\"width\", svgWidth).attr(\"height\", svgHeight);\n      var g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      var x = d3.scaleLinear().rangeRound([0, width]);\n      var y = d3.scaleLinear().rangeRound([height, 0]);\n      var line = d3.line().x(function (d) {\n        return x(d.birthYear);\n      }).y(function (d) {\n        return y(d.count);\n      });\n      x.domain(d3.extent(data, function (d) {\n        return d.birthYear;\n      }));\n      y.domain(d3.extent(data, function (d) {\n        return d.count;\n      }));\n      g.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)).select(\".domain\").remove();\n      g.append(\"g\").call(d3.axisLeft(y)).append(\"text\").attr(\"fill\", \"#000\").attr(\"transform\", \"rotate(-90)\").attr(\"y\", 6).attr(\"dy\", \"0.71em\").attr(\"text-anchor\", \"end\").text(\"Patient Count\");\n      g.append(\"path\").datum(data).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-linejoin\", \"round\").attr(\"stroke-linecap\", \"round\").attr(\"stroke-width\", 1.5).attr(\"d\", line);\n    },\n    renderPieChart() {\n      // Filter out patients with empty birth dates\n      var filteredPatients = this.patients.filter(patient => patient.resource.birthDate && patient.resource.birthDate.length >= 4);\n\n      // Extract birth years and count occurrences\n      var birthYearCounts = filteredPatients.reduce((counts, patient) => {\n        const birthYear = patient.resource.birthDate.substring(0, 4);\n\n        // Increment the count for the birth year\n        counts[birthYear] = (counts[birthYear] || 0) + 1;\n        return counts;\n      }, {});\n      var data = Object.entries(birthYearCounts).map(([birthYear, count]) => ({\n        birthYear: birthYear,\n        count: count\n      }));\n      var svgWidth = 500,\n        svgHeight = 300,\n        radius = Math.min(svgWidth, svgHeight) / 2;\n      var svg = d3.select(this.$refs.d3PieChartContainer).append(\"svg\").attr(\"width\", svgWidth).attr(\"height\", svgHeight);\n\n      // Create group element to hold pie chart\n      var g = svg.append(\"g\").attr(\"transform\", \"translate(\" + radius + \",\" + radius + \")\");\n      var color = d3.scaleOrdinal(d3.schemeCategory10);\n      var pie = d3.pie().value(function (d) {\n        return d.count;\n      });\n      var path = d3.arc().outerRadius(radius).innerRadius(0);\n      var arc = g.selectAll(\"arc\").data(pie(data)).enter().append(\"g\");\n      arc.append(\"path\").attr(\"d\", path).attr(\"fill\", function (d) {\n        return color(d.data.birthYear);\n      });\n      var label = d3.arc().outerRadius(radius).innerRadius(0);\n      arc.append(\"text\").attr(\"transform\", function (d) {\n        return \"translate(\" + label.centroid(d) + \")\";\n      }).attr(\"text-anchor\", \"middle\").text(function (d) {\n        return d.data.birthYear + \":\" + d.data.count + \" patients\";\n      });\n    },\n    renderBarChart() {\n      // Filter out patients with empty birth dates\n      var filteredPatients = this.patients.filter(patient => patient.resource.birthDate && patient.resource.birthDate.length >= 4);\n\n      // Extract birth years and count occurrences\n      var birthYearCounts = filteredPatients.reduce((counts, patient) => {\n        const birthYear = patient.resource.birthDate.substring(0, 4);\n\n        // Increment the count for the birth year\n        counts[birthYear] = (counts[birthYear] || 0) + 1;\n        return counts;\n      }, {});\n      var birthYears = Object.keys(birthYearCounts);\n      var counts = Object.values(birthYearCounts);\n      var svgWidth = 700,\n        svgHeight = 500,\n        barPadding = 2,\n        yGraphPadding = 20;\n      var xGraphPadding = 30;\n      var barWidth = svgWidth / birthYears.length;\n      var svg = d3.select(this.$refs.d3BarChartContainer).append(\"svg\").attr(\"width\", svgWidth).attr(\"height\", svgHeight);\n      var yScale = d3.scaleLinear().domain([0, d3.max(counts) + yGraphPadding]).range([0, svgHeight + yGraphPadding]);\n      var barChart = svg.selectAll(\"rect\").data(counts).enter().append(\"rect\").attr(\"y\", function (d) {\n        return svgHeight - yScale(d) > 0 ? svgHeight - yScale(d) : 0;\n      }).attr(\"height\", function (d) {\n        return yScale(d) - yGraphPadding > 0 ? yScale(d) - yGraphPadding : 0;\n      }).attr(\"width\", barWidth - barPadding).attr(\"transform\", function (d, i) {\n        var translate = [barWidth * i + xGraphPadding, 0];\n        return \"translate(\" + translate + \")\";\n      });\n      svg.selectAll(\"text\").data(counts).enter().append(\"text\").text(function (d) {\n        return d;\n      }).attr(\"y\", function (d) {\n        return svgHeight - yScale(d) - 2;\n      }).attr(\"x\", function (d, i) {\n        return barWidth * i + xGraphPadding;\n      }).attr(\"fill\", \"red\");\n      yScale = d3.scaleLinear().domain([0, d3.max(counts) + yGraphPadding]).range([svgHeight - yGraphPadding, 0]);\n\n      // Update xScale to use d3.scaleBand()\n      var xScale = d3.scaleBand().domain(birthYears).range([0, svgWidth - xGraphPadding]);\n      var xAxis = d3.axisBottom().scale(xScale);\n      var yAxis = d3.axisLeft().scale(yScale);\n      svg.append(\"g\").attr(\"transform\", \"translate(\" + xGraphPadding + \", 0)\").call(yAxis);\n      var xAxisTranslate = svgHeight - 20;\n      svg.append(\"g\").attr(\"transform\", \"translate(\" + xGraphPadding + \", \" + xAxisTranslate + \")\").call(xAxis);\n      return barChart;\n    }\n  }\n};","map":{"version":3,"names":["axios","d3","mounted","fetchPatients","data","patients","searchId","methods","get","then","success","console","log","entry","renderD3Charts","catch","error","alert","message","renderLineChart","renderPieChart","renderBarChart","filteredPatients","filter","patient","resource","birthDate","length","birthYearCounts","reduce","counts","birthYear","substring","Object","entries","map","count","parseInt","svgWidth","svgHeight","margin","top","right","bottom","left","width","height","svg","select","$refs","d3LineChartContainer","append","attr","g","x","scaleLinear","rangeRound","y","line","d","domain","extent","call","axisBottom","remove","axisLeft","text","datum","radius","Math","min","d3PieChartContainer","color","scaleOrdinal","schemeCategory10","pie","value","path","arc","outerRadius","innerRadius","selectAll","enter","label","centroid","birthYears","keys","values","barPadding","yGraphPadding","xGraphPadding","barWidth","d3BarChartContainer","yScale","max","range","barChart","i","translate","xScale","scaleBand","xAxis","scale","yAxis","xAxisTranslate"],"sources":["C:\\xampp\\htdocs\\fhir_web_app\\fhir_web_app_frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"mb-3\">\n      <nav class=\"navbar fixed-top navbar-light bg-light\">\n        <div class=\"container\">\n          <a class=\"navbar-brand\"> PATIENT FHIR</a>\n        </div>\n      </nav>\n    </div>\n    <div class=\"container mt-5 p-3\">\n      <button class=\"btn btn-outline-info rounded-pill\" @click=\"fetchPatients\">\n        Fetch Patients\n      </button>\n      <div v-if=\"patients.length\" class=\"mt-3\">\n       <div class=\"card\">\n        <div class=\"card-header\">\n        <h2>Patients</h2>\n        </div>\n        <div class=\"card-body\">\n           <table class=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Patient ID</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Family Name</th>\n              <th scope=\"col\">Year of Birth</th>\n            </tr>\n          </thead>\n          <tbody v-for=\"patient in patients\" :key=\"patient.resource.id\">\n            <tr>\n              <th scope=\"row\">{{ patient.id }}</th>\n              <td>{{ patient.resource.name[0].given[0] }}</td>\n              <td>{{ patient.resource.name[0].family}}</td>\n              <td>\n                {{\n                  patient.resource.birthDate\n                    ? new Date(patient.resource.birthDate).getFullYear()\n                    : \"N/A\"\n                }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        </div>\n       </div>\n      </div>\n      <div class=\"card mt-4\">\n        <div class=\"card-header\">Line Chart showing Patient Trend Over the Years</div>\n        <div class=\"card-body\">\n          <div ref=\"d3LineChartContainer\"></div>\n        </div>\n      </div>\n      <div class=\"card mt-4\">\n        <div class=\"card-header\">\n          Bar chart for the Distribution of Patients Over the Years\n        </div>\n        <div class=\"card-body\">\n          <div ref=\"d3BarChartContainer\"></div>\n        </div>\n      </div>\n      <div class=\"card mt-4\">\n        <div class=\"card-header\">Patients Pie Chart</div>\n        <div class=\"card-body\">\n          <div ref=\"d3PieChartContainer\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nimport * as d3 from \"d3\";\n\nexport default {\n  mounted() {\n    this.fetchPatients();\n  },\n  data() {\n    return {\n      patients: [],\n      searchId: \"\",\n    };\n  },\n  methods: {\n    async fetchPatients() {\n      try {\n        await axios\n          .get(\"http://localhost:3000/api/patients\")\n          .then((success) => {\n            console.log(\"Successful request to FHIR server\");\n            console.log(success);\n            this.patients = success.data.entry;\n            this.renderD3Charts();\n          })\n          .catch((error) => {\n            console.log(error);\n            alert(`Error! ${error}`);\n          });\n      } catch (error) {\n        console.error(\"Error fetching patients:\", error.message);\n      }\n    },\n\n    renderD3Charts() {\n      this.renderLineChart();\n      this.renderPieChart();\n      this.renderBarChart();\n    },\n    renderLineChart() {\n      // Filter out patients with empty birth dates\n      var filteredPatients = this.patients.filter(\n        (patient) => patient.resource.birthDate && patient.resource.birthDate.length >= 4\n      );\n\n      // Extract birth years and count occurrences\n      var birthYearCounts = filteredPatients.reduce((counts, patient) => {\n        const birthYear = patient.resource.birthDate.substring(0, 4);\n\n        // Increment the count for the birth year\n        counts[birthYear] = (counts[birthYear] || 0) + 1;\n        return counts;\n      }, {});\n\n      var data = Object.entries(birthYearCounts).map(([birthYear, count]) => ({\n        birthYear: parseInt(birthYear), // Convert birthYear to a number\n        count: count,\n      }));\n\n      var svgWidth = 600,\n        svgHeight = 400;\n      var margin = { top: 20, right: 20, bottom: 30, left: 50 };\n      var width = svgWidth - margin.left - margin.right;\n      var height = svgHeight - margin.top - margin.bottom;\n\n      var svg = d3\n        .select(this.$refs.d3LineChartContainer)\n        .append(\"svg\")\n        .attr(\"width\", svgWidth)\n        .attr(\"height\", svgHeight);\n\n      var g = svg\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n      var x = d3.scaleLinear().rangeRound([0, width]);\n      var y = d3.scaleLinear().rangeRound([height, 0]);\n\n      var line = d3\n        .line()\n        .x(function (d) {\n          return x(d.birthYear);\n        })\n        .y(function (d) {\n          return y(d.count);\n        });\n\n      x.domain(\n        d3.extent(data, function (d) {\n          return d.birthYear;\n        })\n      );\n      y.domain(\n        d3.extent(data, function (d) {\n          return d.count;\n        })\n      );\n\n      g.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x))\n        .select(\".domain\")\n        .remove();\n\n      g.append(\"g\")\n        .call(d3.axisLeft(y))\n        .append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \"0.71em\")\n        .attr(\"text-anchor\", \"end\")\n        .text(\"Patient Count\");\n\n      g.append(\"path\")\n        .datum(data)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"steelblue\")\n        .attr(\"stroke-linejoin\", \"round\")\n        .attr(\"stroke-linecap\", \"round\")\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"d\", line);\n    },\n\n    renderPieChart() {\n      // Filter out patients with empty birth dates\n      var filteredPatients = this.patients.filter(\n        (patient) => patient.resource.birthDate && patient.resource.birthDate.length >= 4\n      );\n\n      // Extract birth years and count occurrences\n      var birthYearCounts = filteredPatients.reduce((counts, patient) => {\n        const birthYear = patient.resource.birthDate.substring(0, 4);\n\n        // Increment the count for the birth year\n        counts[birthYear] = (counts[birthYear] || 0) + 1;\n        return counts;\n      }, {});\n\n      var data = Object.entries(birthYearCounts).map(([birthYear, count]) => ({\n        birthYear: birthYear,\n        count: count,\n      }));\n\n      var svgWidth = 500,\n        svgHeight = 300,\n        radius = Math.min(svgWidth, svgHeight) / 2;\n\n      var svg = d3\n        .select(this.$refs.d3PieChartContainer)\n        .append(\"svg\")\n        .attr(\"width\", svgWidth)\n        .attr(\"height\", svgHeight);\n\n      // Create group element to hold pie chart\n      var g = svg\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + radius + \",\" + radius + \")\");\n\n      var color = d3.scaleOrdinal(d3.schemeCategory10);\n\n      var pie = d3.pie().value(function (d) {\n        return d.count;\n      });\n\n      var path = d3.arc().outerRadius(radius).innerRadius(0);\n\n      var arc = g.selectAll(\"arc\").data(pie(data)).enter().append(\"g\");\n\n      arc\n        .append(\"path\")\n        .attr(\"d\", path)\n        .attr(\"fill\", function (d) {\n          return color(d.data.birthYear);\n        });\n\n      var label = d3.arc().outerRadius(radius).innerRadius(0);\n\n      arc\n        .append(\"text\")\n        .attr(\"transform\", function (d) {\n          return \"translate(\" + label.centroid(d) + \")\";\n        })\n        .attr(\"text-anchor\", \"middle\")\n        .text(function (d) {\n          return d.data.birthYear + \":\" + d.data.count + \" patients\";\n        });\n    },\n\n    renderBarChart() {\n      // Filter out patients with empty birth dates\n      var filteredPatients = this.patients.filter(\n        (patient) => patient.resource.birthDate && patient.resource.birthDate.length >= 4\n      );\n\n      // Extract birth years and count occurrences\n      var birthYearCounts = filteredPatients.reduce((counts, patient) => {\n        const birthYear = patient.resource.birthDate.substring(0, 4);\n\n        // Increment the count for the birth year\n        counts[birthYear] = (counts[birthYear] || 0) + 1;\n        return counts;\n      }, {});\n\n      var birthYears = Object.keys(birthYearCounts);\n      var counts = Object.values(birthYearCounts);\n\n      var svgWidth = 700,\n        svgHeight = 500,\n        barPadding = 2,\n        yGraphPadding = 20;\n      var xGraphPadding = 30;\n      var barWidth = svgWidth / birthYears.length;\n\n      var svg = d3\n        .select(this.$refs.d3BarChartContainer)\n        .append(\"svg\")\n        .attr(\"width\", svgWidth)\n        .attr(\"height\", svgHeight);\n\n      var yScale = d3\n        .scaleLinear()\n        .domain([0, d3.max(counts) + yGraphPadding])\n        .range([0, svgHeight + yGraphPadding]);\n\n      var barChart = svg\n        .selectAll(\"rect\")\n        .data(counts)\n        .enter()\n        .append(\"rect\")\n        .attr(\"y\", function (d) {\n          return svgHeight - yScale(d) > 0 ? svgHeight - yScale(d) : 0;\n        })\n        .attr(\"height\", function (d) {\n          return yScale(d) - yGraphPadding > 0 ? yScale(d) - yGraphPadding : 0;\n        })\n        .attr(\"width\", barWidth - barPadding)\n        .attr(\"transform\", function (d, i) {\n          var translate = [barWidth * i + xGraphPadding, 0];\n          return \"translate(\" + translate + \")\";\n        });\n\n      svg\n        .selectAll(\"text\")\n        .data(counts)\n        .enter()\n        .append(\"text\")\n        .text(function (d) {\n          return d;\n        })\n        .attr(\"y\", function (d) {\n          return svgHeight - yScale(d) - 2;\n        })\n        .attr(\"x\", function (d, i) {\n          return barWidth * i + xGraphPadding;\n        })\n        .attr(\"fill\", \"red\");\n\n      yScale = d3\n        .scaleLinear()\n        .domain([0, d3.max(counts) + yGraphPadding])\n        .range([svgHeight - yGraphPadding, 0]);\n\n      // Update xScale to use d3.scaleBand()\n      var xScale = d3\n        .scaleBand()\n        .domain(birthYears)\n        .range([0, svgWidth - xGraphPadding]);\n\n      var xAxis = d3.axisBottom().scale(xScale);\n\n      var yAxis = d3.axisLeft().scale(yScale);\n      svg\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + xGraphPadding + \", 0)\")\n        .call(yAxis);\n\n      var xAxisTranslate = svgHeight - 20;\n      svg\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + xGraphPadding + \", \" + xAxisTranslate + \")\")\n        .call(xAxis);\n\n      return barChart;\n    },\n  },\n};\n</script>\n<style>\n/* Add your styles here */\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}